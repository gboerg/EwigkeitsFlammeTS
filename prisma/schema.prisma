// This is your Prisma schema file,

// learn more about it in the docs: https://pris.ly/d/prisma-schema

// url      = env("DATABASE_URL")

generator client {
  provider = "prisma-client-js"

  output = "../generated/prisma"

  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"

  url = "file:../src/database/bot.db"
}

model User {
  guild_id String

  user_id String

  is_banned Boolean @default(false)

  // @@unique([guild_id, user_id])

  @@id([guild_id, user_id])
}

model Threads {
  guild_id               String
  user_id                String
  thread_channel         String @default("0")
  thread_channel_name    String @default("thread_channel_name")
  first_user_message     String @default("0")
  thread_initial_message String @default("0")
  thread_closed_status   Int    @default(0)
  thread_solved_status   Int    @default(3)
  thread_previous_tags   String @default("empty")

  @@id([guild_id, thread_channel])
}

model Messages {
  guild_id   String
  user_id    String
  message_id String
  channel_id String
  reaction   String
  action     String

  @@unique([guild_id, message_id, action])
}

model Commands {
  guild_id     String
  user_id      String
  command_name String

  @@unique([guild_id])
}

model Actions {
  guild_id     String
  executor     String?
  channel_id   String
  channel_name String?
  command      String
  user_id      String?
  timestamp    Int
  active       Boolean

  @@id([guild_id, command])
}

model NotificationRoles {
  guild_id String
  executor String
  user_id  String
  role     String

  @@id([role])
}

model Setup {
  guild_id   String
  channel_id String

  @@id([guild_id])
}

// TODO: Twitch Stream Notification  
model TwitchSetup {
  entry             String @default("entry")
  access_token      String
  token_expire_time String

  @@id([entry])
}

model StreamerTable {
  id                Int    @id @default(autoincrement())
  guild_id          String
  twitch_user_name  String
  youtube_user_name String

  @@unique([guild_id, twitch_user_name])
}

model TwitchBroadcastSchedule {
  broadcast_schedule String

  @@id([broadcast_schedule])
}
